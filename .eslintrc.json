{
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:@tanstack/eslint-plugin-query/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@tanstack/query", "validate-jsx-nesting"],
  "rules": {
    "@tanstack/query/exhaustive-deps": "error",
    "@tanstack/query/no-rest-destructuring": "error",
    "@tanstack/query/stable-query-client": "error",
    "validate-jsx-nesting/no-invalid-jsx-nesting": "error"
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["unused-imports", "simple-import-sort"],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "import/no-duplicates": ["error", { "prefer-inline": true }],
        "react-hooks/exhaustive-deps": "off", // Incorrectly report needed dependency with Next.js router
        "@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports",
            "fixStyle": "inline-type-imports"
          }
        ],
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              ["^\\u0000", "^@?\\w"],
              [
                "^(@(?!/features)|@/lib|@/utils|@/hooks|@/components|@/interface|@/layouts|@/constants)(/.*|$)"
              ],
              ["^@/features/([^/]+)(?=/).*$"],
              ["^\\."],
              ["^.+\\.s?css$"]
            ]
          }
        ],
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "off",
        "unused-imports/no-unused-imports": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-var-requires": "off",
        "unused-imports/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_"
          }
        ]
      }
    }
  ]
}
